//------------------------------------------------------------------------------
// CharStack : class declaration and definition
//------------------------------------------------------------------------------
#ifndef CHARSTACK_H
#define CHARSTACK_H

#include <vector>
using std::vector;

//------------------------------------------------------------------------------
// CharStack
//------------------------------------------------------------------------------
class CharStack {
private:
	vector<char> vc;

public:
	// constructors
	CharStack() : CharStack(100) {}

	CharStack(int size) {
		vc.reserve(size);
		vc.clear();
	}

	//-----------------------------------------------------------------------------
	// stack util
	//-----------------------------------------------------------------------------
	void push(char c) { vc.push_back(c); }

	//-----------------------------------------------------------------------------
	char pop() {
		char c = vc.back();
		vc.pop_back();
		return c;
	}

	//-----------------------------------------------------------------------------
	char peek() { return vc.back();	}

	//-----------------------------------------------------------------------------
	bool isEmpty() { return vc.empty(); }

	//-----------------------------------------------------------------------------
	bool isFull() { return false; }		// #TODO vector "never" full?

	//-----------------------------------------------------------------------------
	void makeEmpty() { vc.clear(); }
};
#endif // !CHARSTACK_H

